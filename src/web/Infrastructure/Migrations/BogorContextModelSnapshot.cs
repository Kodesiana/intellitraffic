// <auto-generated />
using System;
using Kodesiana.BogorIntelliTraffic.Web.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kodesiana.BogorIntelliTraffic.Web.Infrastructure.Migrations
{
    [DbContext(typeof(BogorContext))]
    partial class BogorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("TEXT")
                        .HasColumnName("camera_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int>("InputTokens")
                        .HasColumnType("INTEGER")
                        .HasColumnName("input_tokens");

                    b.Property<bool>("IsCameraOnline")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_camera_online");

                    b.Property<int>("OutputTokens")
                        .HasColumnType("INTEGER")
                        .HasColumnName("output_tokens");

                    b.Property<string>("Response")
                        .HasColumnType("TEXT")
                        .HasColumnName("response");

                    b.Property<Guid?>("ResultId")
                        .HasColumnType("TEXT")
                        .HasColumnName("result_id");

                    b.HasKey("Id")
                        .HasName("pk_analysis_histories");

                    b.HasIndex("CameraId")
                        .HasDatabaseName("ix_analysis_histories_camera_id");

                    b.HasIndex("ResultId")
                        .IsUnique()
                        .HasDatabaseName("ix_analysis_histories_result_id");

                    b.ToTable("analysis_histories", (string)null);
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("TEXT")
                        .HasColumnName("camera_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<bool>("HasAccident")
                        .HasColumnType("INTEGER")
                        .HasColumnName("has_accident");

                    b.Property<bool>("HasCrowding")
                        .HasColumnType("INTEGER")
                        .HasColumnName("has_crowding");

                    b.Property<string>("SnapshotUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("snapshot_url");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("summary");

                    b.Property<int>("TotalVehicles")
                        .HasColumnType("INTEGER")
                        .HasColumnName("total_vehicles");

                    b.Property<int>("TrafficDensity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("traffic_density");

                    b.HasKey("Id")
                        .HasName("pk_analysis_results");

                    b.HasIndex("CameraId")
                        .HasDatabaseName("ix_analysis_results_camera_id");

                    b.ToTable("analysis_results", (string)null);
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.Camera", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("given_name");

                    b.Property<string>("GoogleMapsUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("google_maps_url");

                    b.Property<string>("HlsStreamName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("hls_stream_name");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL")
                        .HasColumnName("longitude");

                    b.Property<string>("OverlayName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("overlay_name");

                    b.Property<string>("VideoFormat")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("video_format");

                    b.Property<int>("VideoFrameRate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("video_frame_rate");

                    b.Property<string>("VideoResolution")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("video_resolution");

                    b.HasKey("Id")
                        .HasName("pk_cameras");

                    b.ToTable("cameras", (string)null);
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.LatestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("TEXT")
                        .HasColumnName("camera_id");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_update");

                    b.Property<Guid>("ResultId")
                        .HasColumnType("TEXT")
                        .HasColumnName("result_id");

                    b.HasKey("Id")
                        .HasName("pk_latest_analyses");

                    b.HasIndex("CameraId")
                        .IsUnique()
                        .HasDatabaseName("ix_latest_analyses_camera_id");

                    b.HasIndex("ResultId")
                        .IsUnique()
                        .HasDatabaseName("ix_latest_analyses_result_id");

                    b.ToTable("latest_analyses", (string)null);
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisHistory", b =>
                {
                    b.HasOne("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.Camera", "Camera")
                        .WithMany("Histories")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_analysis_histories_cameras_camera_id");

                    b.HasOne("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisResult", "Result")
                        .WithOne("History")
                        .HasForeignKey("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisHistory", "ResultId")
                        .HasConstraintName("fk_analysis_histories_analysis_results_result_id");

                    b.Navigation("Camera");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisResult", b =>
                {
                    b.HasOne("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.Camera", "Camera")
                        .WithMany("Results")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_analysis_results_cameras_camera_id");

                    b.Navigation("Camera");
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.LatestResult", b =>
                {
                    b.HasOne("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.Camera", "Camera")
                        .WithOne()
                        .HasForeignKey("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.LatestResult", "CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_latest_analyses_cameras_camera_id");

                    b.HasOne("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisResult", "Result")
                        .WithOne()
                        .HasForeignKey("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.LatestResult", "ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_latest_analyses_analysis_results_result_id");

                    b.Navigation("Camera");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.AnalysisResult", b =>
                {
                    b.Navigation("History")
                        .IsRequired();
                });

            modelBuilder.Entity("Kodesiana.BogorIntelliTraffic.Web.Domain.Entities.Camera", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
